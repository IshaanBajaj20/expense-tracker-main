{"ast":null,"code":"export default {\n  data() {\n    return {\n      filters: {\n        category: '',\n        maxAmount: 1000,\n        startDate: '',\n        endDate: ''\n      },\n      amountRange: {\n        min: 0,\n        max: 1000\n      },\n      expenses: [],\n      page: 0,\n      size: 5,\n      totalPages: 0,\n      categories: [\"Travel\", \"Food\", \"Utilities\", \"Office\", \"Other\"]\n    };\n  },\n  methods: {\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n    async fetchExpenses() {\n      const params = new URLSearchParams({\n        page: this.page,\n        size: this.size,\n        ...this.filters\n      });\n      const response = await fetch(`http://localhost:8080/api/expenses?${params.toString()}`, {\n        headers: {\n          Authorization: 'Basic ' + btoa('admin:admin')\n        }\n      });\n      const data = await response.json();\n      this.expenses = data.expenses;\n      this.totalPages = data.totalPages;\n    },\n    nextPage() {\n      if (this.page + 1 < this.totalPages) {\n        this.page++;\n        this.fetchExpenses();\n      }\n    },\n    prevPage() {\n      if (this.page > 0) {\n        this.page--;\n        this.fetchExpenses();\n      }\n    }\n  },\n  mounted() {\n    this.fetchExpenses();\n  }\n};","map":{"version":3,"names":["data","filters","category","maxAmount","startDate","endDate","amountRange","min","max","expenses","page","size","totalPages","categories","methods","formatDate","date","Date","toLocaleDateString","fetchExpenses","params","URLSearchParams","response","fetch","toString","headers","Authorization","btoa","json","nextPage","prevPage","mounted"],"sources":["src/components/FilteredExpenseList.vue"],"sourcesContent":["<template>\n  <div class=\"app-bg\">\n    <div class=\"container\">\n      <h2>Filtered Expenses</h2>\n\n      <form @submit.prevent=\"fetchExpenses\">\n        <div>\n          <label>Category:</label>\n          <select v-model=\"filters.category\">\n            <option value=\"\">All</option>\n            <option v-for=\"cat in categories\" :key=\"cat\" :value=\"cat\">{{ cat }}</option>\n          </select>\n        </div>\n        <div class=\"slider-container\">\n          <label>Max Amount: ${{ filters.maxAmount }}</label>\n          <input\n            type=\"range\"\n            v-model.number=\"filters.maxAmount\"\n            :min=\"amountRange.min\"\n            :max=\"amountRange.max\"\n            step=\"1\"\n          />\n        </div>\n        <div>\n          <label>Start Date:</label>\n          <input v-model=\"filters.startDate\" type=\"date\" />\n        </div>\n        <div>\n          <label>End Date:</label>\n          <input v-model=\"filters.endDate\" type=\"date\" />\n        </div>\n        <div class=\"full-width\">\n          <button type=\"submit\">Apply Filters</button>\n        </div>\n      </form>\n\n      <table v-if=\"expenses.length > 0\">\n        <thead>\n          <tr>\n            <th>Description</th>\n            <th>Category</th>\n            <th>Amount</th>\n            <th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"expense in expenses\" :key=\"expense.id\">\n            <td>{{ expense.description }}</td>\n            <td>{{ expense.category }}</td>\n            <td>${{ expense.amount.toFixed(2) }}</td>\n            <td>{{ formatDate(expense.date) }}</td>\n          </tr>\n        </tbody>\n      </table>\n      <p v-else>No results found.</p>\n\n      <div class=\"pagination\">\n        <button @click=\"prevPage\" :disabled=\"page === 0\">Previous</button>\n        <span>Page {{ page + 1 }} of {{ totalPages }}</span>\n        <button @click=\"nextPage\" :disabled=\"page + 1 >= totalPages\">Next</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      filters: {\n        category: '',\n        maxAmount: 1000,\n        startDate: '',\n        endDate: ''\n      },\n      amountRange: {\n        min: 0,\n        max: 1000\n      },\n      expenses: [],\n      page: 0,\n      size: 5,\n      totalPages: 0,\n      categories: [\"Travel\", \"Food\", \"Utilities\", \"Office\", \"Other\"]\n    };\n  },\n  methods: {\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n    async fetchExpenses() {\n      const params = new URLSearchParams({\n        page: this.page,\n        size: this.size,\n        ...this.filters\n      });\n      const response = await fetch(`http://localhost:8080/api/expenses?${params.toString()}`, {\n        headers: {\n          Authorization: 'Basic ' + btoa('admin:admin')\n        }\n      });\n      const data = await response.json();\n      this.expenses = data.expenses;\n      this.totalPages = data.totalPages;\n    },\n    nextPage() {\n      if (this.page + 1 < this.totalPages) {\n        this.page++;\n        this.fetchExpenses();\n      }\n    },\n    prevPage() {\n      if (this.page > 0) {\n        this.page--;\n        this.fetchExpenses();\n      }\n    }\n  },\n  mounted() {\n    this.fetchExpenses();\n  }\n};\n</script>\n\n<style scoped>\n.app-bg {\n  background-color: #f2f2f2;\n  min-height: 100vh;\n  padding: 40px 0;\n}\n\n.container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n}\n\nform {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 16px;\n  margin-bottom: 20px;\n}\nform div {\n  display: flex;\n  flex-direction: column;\n}\n.full-width {\n  grid-column: span 2;\n}\n\nlabel {\n  margin-bottom: 6px;\n  font-weight: bold;\n}\n\ninput,\nselect {\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.slider-container input[type=range] {\n  margin: 5px 0;\n}\n\nbutton {\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n}\nbutton:disabled {\n  background-color: #cccccc;\n}\n\n.pagination {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 20px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 10px;\n}\nth, td {\n  padding: 10px;\n  border-bottom: 1px solid #ccc;\n  text-align: left;\n}\nth {\n  background-color: #f2f2f2;\n}\n</style>\n"],"mappings":"AAkEA;EACAA,KAAA;IACA;MACAC,OAAA;QACAC,QAAA;QACAC,SAAA;QACAC,SAAA;QACAC,OAAA;MACA;MACAC,WAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,QAAA;MACAC,IAAA;MACAC,IAAA;MACAC,UAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA;MACA,WAAAC,IAAA,CAAAD,IAAA,EAAAE,kBAAA;IACA;IACA,MAAAC,cAAA;MACA,MAAAC,MAAA,OAAAC,eAAA;QACAX,IAAA,OAAAA,IAAA;QACAC,IAAA,OAAAA,IAAA;QACA,QAAAV;MACA;MACA,MAAAqB,QAAA,SAAAC,KAAA,uCAAAH,MAAA,CAAAI,QAAA;QACAC,OAAA;UACAC,aAAA,aAAAC,IAAA;QACA;MACA;MACA,MAAA3B,IAAA,SAAAsB,QAAA,CAAAM,IAAA;MACA,KAAAnB,QAAA,GAAAT,IAAA,CAAAS,QAAA;MACA,KAAAG,UAAA,GAAAZ,IAAA,CAAAY,UAAA;IACA;IACAiB,SAAA;MACA,SAAAnB,IAAA,YAAAE,UAAA;QACA,KAAAF,IAAA;QACA,KAAAS,aAAA;MACA;IACA;IACAW,SAAA;MACA,SAAApB,IAAA;QACA,KAAAA,IAAA;QACA,KAAAS,aAAA;MACA;IACA;EACA;EACAY,QAAA;IACA,KAAAZ,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}